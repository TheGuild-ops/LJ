#!/bin/bash

fetch_or_ask() {
    local parameters=("$@")
    local env_file="/root/.env"
    local server_id=""
    local value=""
    local existing_value=""

    # Проверка наличия файла .env и создание его при отсутствии
    [[ -f $env_file ]] || touch "$env_file"

    # Считывание server_id из файла безопасным способом
    server_id=$(grep "^server_id=" "$env_file" | cut -d= -f2 | xargs)

    # Если server_id отсутствует, запрашиваем его у пользователя
    while [[ -z $server_id ]]; do
        read -p "Enter server_id: " server_id
    done

    # Сохраняем server_id в файл .env, если его там не было
    grep -q "server_id" "$env_file" || echo "server_id=$server_id" >> "$env_file"

    # Если функция вызвана без параметров, возвращаем server_id
    if [[ $# -eq 0 ]]; then
        echo "$server_id"
        return
    fi

    # Если указана только одна переменная, проверяем её наличие в файле .env
    if [[ $# -eq 1 ]]; then
        local param="$1"
        existing_value=$(grep "^$param=" "$env_file" | cut -d= -f2)
        if [[ -n $existing_value ]]; then
            value=$existing_value
        else
            read -p "Enter value for $param (or press Enter to skip): " value
            [[ -n "$value" ]] && printf "%s=%s\n" "$param" "$value" >> "$env_file"
        fi
    else
        # Формируем путь к каталогу и имя файла
        local directory="$(pwd)./data"
        local filename=""

        for param in "${parameters[@]}"; do
            directory+="/$param"
            filename+="$param""_"
        done

        # Защита от пустого filename
        [[ -z $filename ]] && { echo "Filename is empty."; exit 1; }

        mkdir -p "$directory" || { echo "Failed to create directory $directory"; exit 1; }

        # Проверяем, есть ли уже значение в файле
        if [[ -f "$directory/$server_id" ]]; then
            existing_value=$(<"$directory/$server_id")
        fi

        if [[ -n $existing_value ]]; then
            value=$existing_value
        else
            read -p "Enter value for $filename (or press Enter to skip): " value
            [[ -n "$value" ]] && printf "%s\n" "$value" > "$directory/$server_id"
        fi

        export "$filename=$value"
    fi

    echo "$value"
}
