#!/bin/bash

fetch_or_ask() {
    local parameters=("$@")
    local env_file="/root/.env"
    local server_id=""
    local value=""
    local existing_value=""
    local prompt=""

    # Проверка наличия файла .env и создание его при отсутствии
    if [[ ! -f $env_file ]]; then
        touch "$env_file"
    fi

    # Считывание server_id из файла
    server_id=$(grep -oP '(?<=server_id=).*' "$env_file")

    # Если server_id отсутствует, запрашиваем его у пользователя
    while [[ -z $server_id ]]; do
        read -p "Enter server_id: " server_id
    done

    # Сохраняем server_id в файл .env, если его там не было
    if ! grep -q "server_id" "$env_file"; then
        echo "server_id=$server_id" >> "$env_file"
    fi

    # Формируем путь к каталогу и имя файла
    local directory="./data"
    local filename=""

    for param in "${parameters[@]}"; do
        directory+="/$param"
        filename+="$param"
    done

    mkdir -p "$directory"  # создаем директорию, если она не существует

    # Проверяем, есть ли уже значение в файле
    if [[ -f "$directory/$filename" ]]; then
        existing_value=$(grep "$server_id" "$directory/$filename" | cut -d' ' -f2)
    fi

    if [[ -n $existing_value ]]; then
        value=$existing_value
    else
        while : ; do  # бесконечный цикл
            read -p "Enter value for $filename (or press Enter to skip): " value
            if [[ -z $value ]]; then
                echo "Skipping the input for $filename."
                return  # прерывает выполнение функции
            else
                break  # выходит из цикла, если значение не пусто
            fi
        done

        # Обновляем значение в файле
        echo "$server_id $value" >> "$directory/$filename"
    fi

    # Экспортируем переменную в текущем сеансе
    export "$filename=$value"

    # Возвращаем значение
    echo "$value"
}
